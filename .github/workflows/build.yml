name: CI Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        configuration: ['Debug', 'Release']
        include:
          - platform: 'x64'
            triplet: 'x64-windows'

          - platform: 'x86'
            triplet: 'x86-windows'

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Checkout QtMsBuild
      uses: actions/checkout@v4
      with:
        repository: Cortana4/QtMsBuild
        path:  ${{ github.workspace }}/QtMsBuild

    - name: Set Qt Environment Variables
      run: echo "QtMsBuild=${{ github.workspace }}/QtMsBuild/QtMsBuild" >> $env:GITHUB_ENV

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 6f1ddd6b6878e7e66fcc35c65ba1d8feec2e01f8
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        doNotCache: false
        runVcpkgInstall: true

    - name: Run vcpkg integrate install
      run: ${{ github.workspace }}/vcpkg/vcpkg integrate install

    - name: Invoke Developer Command Prompt for VS
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build
      run: msbuild /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}-${{ matrix.configuration }}
        path: bin/${{ matrix.platform == 'x86' && 'Win32' || matrix.platform }}/${{ matrix.configuration }}
